# Copyright ¬© 2022 mightyK1ngRichard <dimapermyakov55@gmail.com>

from telebot import TeleBot, types
from random import randint
from helpScripts.tests import TIME_TABLE
from helpScripts.LessonBot import TOKEN

# import os
# from dotenv import load_dotenv

# –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å.
# TOKEN = str(os.getenv('TOKEN'))
bot = TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message: types.Message):
    menu(message, f'–ü—Ä–∏–≤–µ—Ç, *{message.from_user.first_name} {message.from_user.last_name}*!')


@bot.message_handler(content_types=['text'])
def main_text(message: types.Message):
    if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–æ–∑–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 0, 100. –ì–¥–µ 0 - –Ω–∞—á–∞–ª–æ, 100 –∫–æ–Ω–µ—Ü.')
        bot.register_next_step_handler(msg, get_user_number)

    elif message.text == '‚è± –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        markup = types.InlineKeyboardMarkup()
        buttons = [
            types.InlineKeyboardButton('–ß–∏—Å–ª–∏—Ç–µ–ª—å', callback_data='—á–∏—Å–ª–∏—Ç–µ–ª—å'),
            types.InlineKeyboardButton('–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', callback_data='–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å')
        ]
        markup.add(*buttons)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ:', reply_markup=markup)

    elif message.text == 'üì∂ –°–≤—è–∑—å —Å–æ –º–Ω–æ–π':
        social_network(message)

    elif message.text == 'üì∑ –§–æ—Ç–æ':
        photo = open('pictures/time-table.png', 'rb')
        bot.send_photo(message.chat.id, photo)

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:')

    elif message.text == '–ö—Ä–µ—Å—Ç–∏–∫–∏ –Ω–æ–ª–∏–∫–∏':
        pass

    else:
        bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!')


@bot.callback_query_handler(func=lambda call: True)
def call_answer(call: types.CallbackQuery):
    if call.data == '—á–∏—Å–ª–∏—Ç–µ–ª—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        buttons = [
            types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
            types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫'),
            types.KeyboardButton('–°—Ä–µ–¥–∞'),
            types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥'),
            types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞'),
            types.KeyboardButton('–°—É–±–±–æ—Ç–∞'),
            types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=markup)
        bot.register_next_step_handler(msg, get_time_table_numerator, week_day='—á–∏—Å–ª–∏—Ç–µ–ª—å')

    elif call.data == '–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        buttons = [
            types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
            types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫'),
            types.KeyboardButton('–°—Ä–µ–¥–∞'),
            types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥'),
            types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞'),
            types.KeyboardButton('–°—É–±–±–æ—Ç–∞'),
            types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=markup)
        bot.register_next_step_handler(msg, get_time_table_numerator, week_day='–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å')


def get_time_table_numerator(message: types.Message, week_day: str):
    res = '\n'.join(TIME_TABLE[week_day][message.text])
    bot.send_message(message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ "{message.text}":\n\n{res}')
    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')


def social_network(message: types.Message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.KeyboardButton('GitHub'),
        types.InlineKeyboardButton('VK'),
        types.InlineKeyboardButton('VK-memes'),
        types.InlineKeyboardButton('Instagram'),
        types.InlineKeyboardButton('Gmail'),
        types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥'),
    ]
    markup_reply.add(*buttons)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü.—Å–µ—Ç–∏:', reply_markup=markup_reply)
    bot.register_next_step_handler(msg, choose_social_network)


def choose_social_network(message: types.Message):
    if message.text == 'GitHub':
        bot.send_message(message.chat.id, 'https://github.com/mightyK1ngRichard')

    elif message.text == 'VK':
        bot.send_message(message.chat.id, 'https://vk.com/mightyk1ngrichard')

    elif message.text == 'VK-memes':
        bot.send_message(message.chat.id, 'https://vk.com/iu5memes')

    elif message.text == 'Instagram':
        bot.send_message(message.chat.id, 'https://www.instagram.com/permyakoovv/')

    elif message.text == 'Gmail':
        bot.send_message(message.chat.id, 'dimapermyakov55@gmail.com')

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')

    else:
        bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!')

    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')


def get_user_number(message: types.Message):
    start_range, end_range = message.text.split(', ')
    bot.send_message(message.chat.id, f"–í–∞—à–µ —á–∏—Å–ª–æ: {str(randint(int(start_range.strip()), int(end_range.strip())))}")
    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')


def menu(message: types.Message, text: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = [
        types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ'),
        types.KeyboardButton('‚è± –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'),
        types.KeyboardButton('üì∂ –°–≤—è–∑—å —Å–æ –º–Ω–æ–π'),
        types.KeyboardButton('üì∑ –§–æ—Ç–æ')
    ]
    markup.add(*button)
    return bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode='markdown')


if __name__ == '__main__':
    bot.polling(none_stop=True)
