# Copyright ¬© 2022 mightyK1ngRichard <dimapermyakov55@gmail.com>

from telebot import TeleBot, types
from random import randint
from random import choice
from helpScripts.SwitchFilesHere import CARDS, TIME_TABLE, TOKEN

bot = TeleBot(TOKEN)
CARDS_LIST = list()


@bot.message_handler(commands=['start'])
def start(message: types.Message):
    text = f"""
    –ü—Ä–∏–≤–µ—Ç, *{message.from_user.first_name} {message.from_user.last_name if message.from_user.last_name is not None else ''}*! 
    –Ø –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—è –æ–¥–Ω–æ–≥–æ —á—É–≤–∞—á–∫–∞, –∏ –≤–æ—Ç —á—Ç–æ —è —É–º–µ—é:
    1. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ò–£5-33–ë. (–í –±—É–¥—É—â–µ–º —Ä–∞—Å—à–∏—Ä—é—Å—å)
    2. –ú–æ–≥—É –¥–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∞.
    3. –ú–æ–≥—É —Å—ã–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ 21 –æ—á–∫–æ.
    4. –ú–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. (–î–æ—Ä–∞–±–æ—Ç–∞—é—Å—å)
    5. –ú–æ–≥—É –≤—ã–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.

    –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã, —è –º–æ–≥ –Ω–µ —É—á–µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ "–º–∞–ª–æ—Å—Ç—å –Ω–µ—É–º–Ω—ã–µ" –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏–≤–æ–¥—è—â–∏–º –∫ –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º.
    –ï—Å–ª–∏ –í–∞–º —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–µ "—É–º–Ω–æ–µ" –¥–µ–π—Å—Ç–≤–∏–µ, —á—Ç–æ –¥–∞–∂–µ —è –Ω–µ —É—á—ë–ª –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É.

    *–ê —Ç–∞–∫ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ–∏–≥—Ä—ã—à–∞–º–∏ –±–∞–Ω–∫–∏—Ä—É!*
"""
    menu(message, text)


@bot.message_handler(content_types=['text'])
def main_text(message: types.Message):
    if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–æ–∑–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 0, 100.\n–ì–¥–µ 0 - –Ω–∞—á–∞–ª–æ, 100 –∫–æ–Ω–µ—Ü.',
                               reply_markup=types.ReplyKeyboardRemove(selective=True))
        bot.register_next_step_handler(msg, get_user_number)

    elif message.text == '‚è± –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        markup = types.InlineKeyboardMarkup()
        buttons = [
            types.InlineKeyboardButton('–ß–∏—Å–ª–∏—Ç–µ–ª—å', callback_data='—á–∏—Å–ª–∏—Ç–µ–ª—å'),
            types.InlineKeyboardButton('–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', callback_data='–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å')
        ]
        markup.add(*buttons)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ:', reply_markup=markup)

    elif message.text == 'üÉèùü∏ùü∑':
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–°—Ç–∞—Ä—Ç', callback_data='—Å—Ç–∞—Ä—Ç'))
        bot.send_message(message.chat.id, '–ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É!', reply_markup=markup)

    elif message.text == 'üì∂ –°–≤—è–∑—å —Å–æ –º–Ω–æ–π':
        social_network(message)

    elif message.text == 'üì∑ –§–æ—Ç–æ':
        photo = open('pictures/time-table.png', 'rb')
        bot.send_photo(message.chat.id, photo)

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:')
        return

    elif message.text == '–ö—Ä–µ—Å—Ç–∏–∫–∏ –Ω–æ–ª–∏–∫–∏':
        pass

    else:
        bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!')


def twenty_one(message: types.Message, data: tuple):
    if message.text in ['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', '–°—Ç–æ–ø']:
        user_sum, banker_sum, flag_for_banker = data
        text = """"""
        answer = True if message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' else False

        if not answer and not flag_for_banker:
            res_game, user_sum_res, bot_sum = ('‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏', user_sum, banker_sum) if user_sum > banker_sum else (
                '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else ('‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
            bot.send_message(message.chat.id,
                             text + f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        elif answer:
            res = CARDS_LIST.pop(CARDS_LIST.index(choice(CARDS_LIST)))
            user_sum += res.number
            # bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}')
            text += f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}\n'
            if user_sum > 21:
                bot.send_message(message.chat.id,
                                 text + f"‚ùóÔ∏è–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
                menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
                return

            elif user_sum == 21:
                bot.send_message(message.chat.id,
                                 text + f"‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
                menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
                return

        text += f'==> –°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞ = {user_sum}\n'
        # –•–æ–¥ –±–∞–Ω–∫–∏—Ä–∞.
        if flag_for_banker:
            res = CARDS_LIST.pop(CARDS_LIST.index(choice(CARDS_LIST)))
            text += f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}\n'
            banker_sum += res.number

        if banker_sum > 21:
            bot.send_message(message.chat.id,
                             text + f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø—Ä–æ–∏–≥—Ä–∞–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        elif banker_sum == 21:
            bot.send_message(message.chat.id,
                             text + f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        text += f'==> –°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞ = {banker_sum}\n'
        if flag_for_banker:
            if (banker_sum > 17 and answer) or (banker_sum > user_sum and not answer):
                flag_for_banker = False
                text += '> –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –ë–∞–Ω–∫–∏—Ä –ø–µ—Ä–µ—Å—Ç–∞—ë—Ç –Ω–∞–±–∏—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã!\n'
                if not answer:
                    res_game, user_sum_res, bot_sum = (
                        '‚ùó–ò–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum) if user_sum > banker_sum else (
                        '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else (
                        '‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
                    bot.send_message(message.chat.id,
                                     text + f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
                    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
                    return

        # –ü–µ—Ä–µ—Ö–æ–¥.
        bot.send_message(message.chat.id, text)
        all_data = (user_sum, banker_sum, flag_for_banker)
        if answer:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            buttons = [
                types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
                types.KeyboardButton('–°—Ç–æ–ø'),
            ]
            markup.add(*buttons)
            msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:', reply_markup=markup)
            bot.register_next_step_handler(msg, game_second_step, all_data)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            buttons = [
                types.KeyboardButton('–°—Ç–æ–ø')
            ]
            markup.add(*buttons)
            msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:', reply_markup=markup)
            bot.register_next_step_handler(msg, game_second_step, all_data)

    else:
        bot.send_message(message.chat.id,
                         '–ù–£ –¢–´ –î–ï–ë–ò–õ? –ù—É –≤–æ—Ç –¥–ª—è –∫–æ–≥–æ —è –∫–Ω–æ–ø–∫–∏ –¥–µ–ª–∞–ª?!\n–•–æ—Ä–æ—à–æ, —á—Ç–æ —è —É–º–Ω—ã–π –∏ –ø—Ä–µ–¥—É–≥–∞–¥–∞–ª —Ç–æ, '
                         '—á—Ç–æ —Ç—ã –¥–µ–±–∏–ª!')
        bot.send_video(message.chat.id,
                       'https://tenor.com/view/–ø–æ–Ω–∞—Å–µ–Ω–∫–æ–≤-–ø–µ—Ä–µ–∏–≥—Ä–∞–ª-—É–Ω–∏—á—Ç–æ–∂–∏–ª-ponasenkov-gif-20047373')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, –¥—É—Ä–∞—á–æ–∫: ')
        return


def game_second_step(message: types.Message, data: tuple):
    if message.text in ['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', '–°—Ç–æ–ø']:
        user_sum, banker_sum, flag_for_banker = data
        answer = True if message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' else False

        text = """"""
        if not answer and not flag_for_banker:
            res_game, user_sum_res, bot_sum = ('‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏', user_sum, banker_sum) if user_sum > banker_sum else (
                '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else ('‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
            bot.send_message(message.chat.id,
                             text + f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        elif answer:
            res = CARDS_LIST.pop(CARDS_LIST.index(choice(CARDS_LIST)))
            user_sum += res.number
            text += f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}\n'
            if user_sum > 21:
                bot.send_message(message.chat.id,
                                 text + f"‚ùóÔ∏è–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
                menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
                return

            elif user_sum == 21:
                bot.send_message(message.chat.id,
                                 text + f"‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
                menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
                return

        text += f'==> –°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞ = {user_sum}\n'
        # –•–æ–¥ –±–∞–Ω–∫–∏—Ä–∞.
        if flag_for_banker:
            res = CARDS_LIST.pop(CARDS_LIST.index(choice(CARDS_LIST)))
            text += f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}\n'
            banker_sum += res.number

        if banker_sum > 21:
            bot.send_message(message.chat.id,
                             text + f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø—Ä–æ–∏–≥—Ä–∞–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        elif banker_sum == 21:
            bot.send_message(message.chat.id,
                             text + f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        text += f'==> –°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞ = {banker_sum}\n'

        if flag_for_banker:
            if (banker_sum > 17 and answer) or (banker_sum > user_sum and not answer):
                flag_for_banker = False
                text += '> –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –ë–∞–Ω–∫–∏—Ä –ø–µ—Ä–µ—Å—Ç–∞—ë—Ç –Ω–∞–±–∏—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã!\n'
                if not answer:
                    res_game, user_sum_res, bot_sum = (
                        '‚ùó–ò–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum) if user_sum > banker_sum else (
                        '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else (
                        '‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
                    bot.send_message(message.chat.id,
                                     text + f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
                    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
                    return

        # –ü–µ—Ä–µ—Ö–æ–¥.
        bot.send_message(message.chat.id, text)
        all_data = (user_sum, banker_sum, flag_for_banker)
        if answer:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            buttons = [
                types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
                types.KeyboardButton('–°—Ç–æ–ø'),
            ]
            markup.add(*buttons)
            msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:', reply_markup=markup)
            bot.register_next_step_handler(msg, twenty_one, all_data)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            buttons = [
                types.KeyboardButton('–°—Ç–æ–ø')
            ]
            markup.add(*buttons)
            msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:', reply_markup=markup)
            bot.register_next_step_handler(msg, twenty_one, all_data)

    else:
        bot.send_message(message.chat.id,
                         '–ù–£ –¢–´ –î–ï–ë–ò–õ? –ù—É –≤–æ—Ç –¥–ª—è –∫–æ–≥–æ —è –∫–Ω–æ–ø–∫–∏ –¥–µ–ª–∞–ª?!\n–•–æ—Ä–æ—à–æ, —á—Ç–æ —è —É–º–Ω—ã–π –∏ –ø—Ä–µ–¥—É–≥–∞–¥–∞–ª —Ç–æ, '
                         '—á—Ç–æ —Ç—ã –¥–µ–±–∏–ª!')
        bot.send_video(message.chat.id,
                       'https://tenor.com/view/–ø–æ–Ω–∞—Å–µ–Ω–∫–æ–≤-–ø–µ—Ä–µ–∏–≥—Ä–∞–ª-—É–Ω–∏—á—Ç–æ–∂–∏–ª-ponasenkov-gif-20047373')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é, –¥—É—Ä–∞—á–æ–∫: ')
        return


@bot.callback_query_handler(func=lambda call: True)
def call_answer(call: types.CallbackQuery):
    if call.data == '—á–∏—Å–ª–∏—Ç–µ–ª—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        buttons = [
            types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
            types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫'),
            types.KeyboardButton('–°—Ä–µ–¥–∞'),
            types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥'),
            types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞'),
            types.KeyboardButton('–°—É–±–±–æ—Ç–∞'),
            types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=markup)
        bot.register_next_step_handler(msg, get_time_table, week_day='—á–∏—Å–ª–∏—Ç–µ–ª—å')

    elif call.data == '–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        buttons = [
            types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
            types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫'),
            types.KeyboardButton('–°—Ä–µ–¥–∞'),
            types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥'),
            types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞'),
            types.KeyboardButton('–°—É–±–±–æ—Ç–∞'),
            types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=markup)
        bot.register_next_step_handler(msg, get_time_table, week_day='–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å')

    elif call.data == '—Å—Ç–∞—Ä—Ç':
        global CARDS_LIST
        CARDS_LIST = CARDS[:]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = [
            types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É!', reply_markup=markup)
        bot.register_next_step_handler(msg, twenty_one, (0, 0, True))


def get_time_table(message: types.Message, week_day: str):
    if message.text in ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']:
        res = '\n'.join(TIME_TABLE[week_day][message.text])
        bot.send_message(message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ "{message.text}":\n\n{res}')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')
        return

    else:
        bot.send_message(message.chat.id, '–ù—É –¥—É—Ä–∞–∫ –µ—Å—Ç—å –¥—É—Ä–∞–∫!\n–î–ª—è –æ—Å–æ–±–æ –æ–¥–∞—Ä—ë–Ω–Ω—ã—Ö —è –¥–æ–±–∞–≤–∏–ª –∫–Ω–æ–ø–∫–∏!')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')
        return


def social_network(message: types.Message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.KeyboardButton('GitHub'),
        types.InlineKeyboardButton('VK'),
        types.InlineKeyboardButton('VK-memes'),
        types.InlineKeyboardButton('Instagram'),
        types.InlineKeyboardButton('Gmail'),
        types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥'),
    ]
    markup_reply.add(*buttons)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü.—Å–µ—Ç–∏:', reply_markup=markup_reply)
    bot.register_next_step_handler(msg, choose_social_network)


def choose_social_network(message: types.Message):
    if message.text == 'GitHub':
        bot.send_message(message.chat.id, 'https://github.com/mightyK1ngRichard')

    elif message.text == 'VK':
        bot.send_message(message.chat.id, 'https://vk.com/mightyk1ngrichard')

    elif message.text == 'VK-memes':
        bot.send_message(message.chat.id, 'https://vk.com/iu5memes')

    elif message.text == 'Instagram':
        bot.send_message(message.chat.id, 'https://www.instagram.com/permyakoovv/')

    elif message.text == 'Gmail':
        bot.send_message(message.chat.id, 'dimapermyakov55@gmail.com')

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')
        return

    else:
        bot.send_message(message.chat.id, '–ù—É –≤–æ—Ç –¥—É—Ä–∞–∫, –æ–Ω –∏ –µ—Å—Ç—å –¥—É—Ä–∞–∫!\n–î–ª—è –æ—Å–æ–±–æ –æ–¥–∞—Ä—ë–Ω–Ω—ã—Ö —è –¥–æ–±–∞–≤–∏–ª –∫–Ω–æ–ø–∫–∏!')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç, –¥—É—Ä–∞–∫:')
        return

    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')


def get_user_number(message: types.Message):
    res = message.text.split(',')
    if len(res) > 4095:
        bot.send_message(message.chat.id, '–ù—É —Ç—ã –∫–Ω—á –∂–µ—Å—Ç—å –¥–∞—É–Ω... –ö—É–¥–∞ —Å—Ç–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤?')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ')
        return

    if ',' not in str(res):
        bot.send_message(message.chat.id, '–ò–¥–∏–æ—Ç! –ì–¥–µ –∑–∞–ø—è—Ç–∞—è?')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ')
        return

    try:
        res = list(map(int, res))
    except ValueError:
        bot.send_message(message.chat.id, '–¢—ã –∏–¥–∏–æ—Ç? –í–≤–æ–¥–∏ —á–∏—Å–ª–∞!')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ')
        return

    if len(res) != 2:
        bot.send_message(message.chat.id, '–ò–¥–∏–æ—Ç! –ù–∞–¥–æ –≤–≤–æ–¥–∏—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é!')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ')
        return

    start_range, end_range = sorted(res)

    bot.send_message(message.chat.id, f"–í–∞—à–µ —á–∏—Å–ª–æ: {randint(start_range, end_range)}")
    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')


def menu(message: types.Message, text: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = [
        types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ'),
        types.KeyboardButton('‚è± –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'),
        types.KeyboardButton('üì∂ –°–≤—è–∑—å —Å–æ –º–Ω–æ–π'),
        types.KeyboardButton('üÉèùü∏ùü∑'),
        types.KeyboardButton('üì∑ –§–æ—Ç–æ')
    ]
    markup.add(*button)
    bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode='markdown')


if __name__ == '__main__':
    bot.polling(none_stop=True)
