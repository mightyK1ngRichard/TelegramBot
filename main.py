# Copyright ¬© 2022 mightyK1ngRichard <dimapermyakov55@gmail.com>

from telebot import TeleBot, types
from random import randint
from helpScripts.tests import TIME_TABLE
from helpScripts.LessonBot import TOKEN
from twentyOne import CARDS
from random import choice

# import os
# from dotenv import load_dotenv

# –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å.
# TOKEN = str(os.getenv('TOKEN'))
bot = TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message: types.Message):
    menu(message, f'–ü—Ä–∏–≤–µ—Ç, *{message.from_user.first_name} {message.from_user.last_name}*!')


@bot.message_handler(content_types=['text'])
def main_text(message: types.Message):
    if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–æ–∑–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 0, 100. –ì–¥–µ 0 - –Ω–∞—á–∞–ª–æ, 100 –∫–æ–Ω–µ—Ü.')
        bot.register_next_step_handler(msg, get_user_number)

    elif message.text == '‚è± –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        markup = types.InlineKeyboardMarkup()
        buttons = [
            types.InlineKeyboardButton('–ß–∏—Å–ª–∏—Ç–µ–ª—å', callback_data='—á–∏—Å–ª–∏—Ç–µ–ª—å'),
            types.InlineKeyboardButton('–ó–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å', callback_data='–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å')
        ]
        markup.add(*buttons)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ:', reply_markup=markup)

    elif message.text == 'üÉèùü∏ùü∑':
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton('–°—Ç–∞—Ä—Ç', callback_data='—Å—Ç–∞—Ä—Ç'))
        bot.send_message(message.chat.id, '–ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É!', reply_markup=markup)

    elif message.text == 'üì∂ –°–≤—è–∑—å —Å–æ –º–Ω–æ–π':
        social_network(message)

    elif message.text == 'üì∑ –§–æ—Ç–æ':
        photo = open('pictures/time-table.png', 'rb')
        bot.send_photo(message.chat.id, photo)

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:')

    elif message.text == '–ö—Ä–µ—Å—Ç–∏–∫–∏ –Ω–æ–ª–∏–∫–∏':
        pass

    else:
        bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!')


def twenty_one(message: types.Message, data: tuple):
    user_sum, banker_sum, flag_for_banker = data
    answer = True if message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' else False
    if not answer and not flag_for_banker:
        res_game, user_sum_res, bot_sum = ('‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏', user_sum, banker_sum) if user_sum > banker_sum else (
            '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else ('‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
        bot.send_message(message.chat.id,
                         f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        return

    elif answer:
        res = CARDS.pop(CARDS.index(choice(CARDS)))
        user_sum += res.number
        bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}')

        if user_sum > 21:
            bot.send_message(message.chat.id,
                             f"‚ùóÔ∏è–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        elif user_sum == 21:
            bot.send_message(message.chat.id,
                             f"‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

    bot.send_message(message.chat.id, f'==> –°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞ = {user_sum}')

    # –•–æ–¥ –±–∞–Ω–∫–∏—Ä–∞.
    if flag_for_banker:
        res = CARDS.pop(CARDS.index(choice(CARDS)))
        bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}')
        banker_sum += res.number

    if banker_sum > 21:
        bot.send_message(message.chat.id,
                         f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø—Ä–æ–∏–≥—Ä–∞–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        return

    elif banker_sum == 21:
        bot.send_message(message.chat.id,
                         f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        return

    elif (banker_sum > 15 and answer) or (banker_sum > user_sum and not answer):
        flag_for_banker = False
        bot.send_message(message.chat.id, '> –ë–∞–Ω–∫–∏—Ä –ø–µ—Ä–µ—Å—Ç–∞–ª –Ω–∞–±–∏—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã!')
        if not answer and not flag_for_banker:
            res_game, user_sum_res, bot_sum = (
                '‚ùó–ò–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum) if user_sum > banker_sum else (
                '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else (
                '‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
            bot.send_message(message.chat.id,
                             f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
            msg = menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            bot.register_next_step_handler(msg, main_text)

    # –ü–µ—Ä–µ—Ö–æ–¥.
    bot.send_message(message.chat.id, f'==> –°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞ = {banker_sum}\n\n{"-" * 30}\n')
    all_data = (user_sum, banker_sum, flag_for_banker)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
        types.KeyboardButton('–°—Ç–æ–ø'),
    ]
    markup.add(*buttons)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:', reply_markup=markup)
    bot.register_next_step_handler(msg, game_second_step, all_data)


def game_second_step(message: types.Message, data: tuple):
    user_sum, banker_sum, flag_for_banker = data
    answer = True if message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' else False

    if not answer and not flag_for_banker:
        res_game, user_sum_res, bot_sum = ('‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏', user_sum, banker_sum) if user_sum > banker_sum else (
            '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else ('‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
        bot.send_message(message.chat.id,
                         f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        return

    elif answer:
        res = CARDS.pop(CARDS.index(choice(CARDS)))
        user_sum += res.number
        bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}')

        if user_sum > 21:
            bot.send_message(message.chat.id,
                             f"‚ùóÔ∏è–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

        elif user_sum == 21:
            bot.send_message(message.chat.id,
                             f"‚ùó–í—ã –ø–æ–±–µ–¥–∏–ª–∏!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

    bot.send_message(message.chat.id, f'==> –°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞ = {user_sum}')

    # –•–æ–¥ –±–∞–Ω–∫–∏—Ä–∞.
    if flag_for_banker:
        res = CARDS.pop(CARDS.index(choice(CARDS)))
        bot.send_message(message.chat.id, f'–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: {res.name} {res.suit}')
        banker_sum += res.number

    if banker_sum > 21:
        bot.send_message(message.chat.id,
                         f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø—Ä–æ–∏–≥—Ä–∞–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        return

    elif banker_sum == 21:
        bot.send_message(message.chat.id,
                         f"‚ùóÔ∏è–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª!\n–°—É–º–º–∞ –∏–≥—Ä–æ–∫–∞: {user_sum}\n–°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞: {banker_sum}")
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
        return

    elif (banker_sum > 15 and answer) or (banker_sum > user_sum and not answer):
        flag_for_banker = False
        bot.send_message(message.chat.id, '> –ë–∞–Ω–∫–∏—Ä –ø–µ—Ä–µ—Å—Ç–∞–ª –Ω–∞–±–∏—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã!')
        if not answer and not flag_for_banker:
            res_game, user_sum_res, bot_sum = (
                '‚ùó–ò–≥—Ä–æ–∫ –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum) if user_sum > banker_sum else (
                '‚ùó–ù–∏—á—å—è', user_sum, banker_sum) if user_sum == banker_sum else (
                '‚ùó–ë–∞–Ω–∫–∏—Ä –ø–æ–±–µ–¥–∏–ª', user_sum, banker_sum)
            bot.send_message(message.chat.id,
                             f'{res_game}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_sum_res}\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–∞–Ω–∫–∏—Ä–∞: {bot_sum}')
            menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')
            return

    # –ü–µ—Ä–µ—Ö–æ–¥.
    bot.send_message(message.chat.id, f'==> –°—É–º–º–∞ –±–∞–Ω–∫–∏—Ä–∞ = {banker_sum}\n\n{"-" * 30}\n')
    all_data = (user_sum, banker_sum, flag_for_banker)
    markup = types.ReplyKeyboardMarkup()
    buttons = [
        types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
        types.KeyboardButton('–°—Ç–æ–ø'),
    ]
    markup.add(*buttons)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:', reply_markup=markup)
    bot.register_next_step_handler(msg, twenty_one, all_data)


@bot.callback_query_handler(func=lambda call: True)
def call_answer(call: types.CallbackQuery):
    if call.data == '—á–∏—Å–ª–∏—Ç–µ–ª—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        buttons = [
            types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
            types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫'),
            types.KeyboardButton('–°—Ä–µ–¥–∞'),
            types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥'),
            types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞'),
            types.KeyboardButton('–°—É–±–±–æ—Ç–∞'),
            types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=markup)
        bot.register_next_step_handler(msg, get_time_table_numerator, week_day='—á–∏—Å–ª–∏—Ç–µ–ª—å')

    elif call.data == '–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        buttons = [
            types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
            types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫'),
            types.KeyboardButton('–°—Ä–µ–¥–∞'),
            types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥'),
            types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞'),
            types.KeyboardButton('–°—É–±–±–æ—Ç–∞'),
            types.KeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ', reply_markup=markup)
        bot.register_next_step_handler(msg, get_time_table_numerator, week_day='–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å')

    elif call.data == '—Å—Ç–∞—Ä—Ç':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        buttons = [
            types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
        ]
        markup.add(*buttons)
        msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É!', reply_markup=markup)
        bot.register_next_step_handler(call.message, twenty_one, (0, 0, True))


def get_time_table_numerator(message: types.Message, week_day: str):
    res = '\n'.join(TIME_TABLE[week_day][message.text])
    bot.send_message(message.chat.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ "{message.text}":\n\n{res}')
    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')


def social_network(message: types.Message):
    markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        types.KeyboardButton('GitHub'),
        types.InlineKeyboardButton('VK'),
        types.InlineKeyboardButton('VK-memes'),
        types.InlineKeyboardButton('Instagram'),
        types.InlineKeyboardButton('Gmail'),
        types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥'),
    ]
    markup_reply.add(*buttons)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü.—Å–µ—Ç–∏:', reply_markup=markup_reply)
    bot.register_next_step_handler(msg, choose_social_network)


def choose_social_network(message: types.Message):
    if message.text == 'GitHub':
        bot.send_message(message.chat.id, 'https://github.com/mightyK1ngRichard')

    elif message.text == 'VK':
        bot.send_message(message.chat.id, 'https://vk.com/mightyk1ngrichard')

    elif message.text == 'VK-memes':
        bot.send_message(message.chat.id, 'https://vk.com/iu5memes')

    elif message.text == 'Instagram':
        bot.send_message(message.chat.id, 'https://www.instagram.com/permyakoovv/')

    elif message.text == 'Gmail':
        bot.send_message(message.chat.id, 'dimapermyakov55@gmail.com')

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')

    else:
        bot.send_message(message.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É!')

    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:')


def get_user_number(message: types.Message):
    start_range, end_range = message.text.split(', ')
    bot.send_message(message.chat.id, f"–í–∞—à–µ —á–∏—Å–ª–æ: {str(randint(int(start_range.strip()), int(end_range.strip())))}")
    menu(message, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.')


def menu(message: types.Message, text: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = [
        types.KeyboardButton('üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ'),
        types.KeyboardButton('‚è± –ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'),
        types.KeyboardButton('üì∂ –°–≤—è–∑—å —Å–æ –º–Ω–æ–π'),
        types.KeyboardButton('üÉèùü∏ùü∑'),
        types.KeyboardButton('üì∑ –§–æ—Ç–æ')
    ]
    markup.add(*button)
    bot.send_message(message.chat.id, text, reply_markup=markup, parse_mode='markdown')


if __name__ == '__main__':
    bot.polling(none_stop=True)
